                      Subversion M3 Installation
                      ==========================

   ********************************************************************
   ***                                                              ***
   ***  Note: this is PRE-ALPHA code.  Don't use it on real data,   ***
   ***  except for Subversion itself, and that only because hordes  ***
   ***  of selfless volunteers are standing by ready to help you    ***
   ***  if you get yourself in a pickle.                            ***
   ***                                                              ***
   ********************************************************************

(Please read the HACKING file if you're installing from a working copy
rather than an unpacked distribution.)

Subversion installs using the usual GNU procedure:

   $ ./configure --enable-maintainer-mode --disable-shared
   $ make
   $ make check
   # make install

The flags to `configure' are highly recommended for developers, as
they build a statically-linked binary.  If you don't use those flags,
then you must reverse the order of the "make check" and "make install"
steps, because the shared libraries must be installed before "make
check" will work.


PREREQUISITES:

1. Berkeley DB 3.3.11

   You'll need Berkeley DB 3.3.11 or higher installed on your system.
   You can get it from:

      http://www.sleepycat.com

   If you already have another version of Berkeley DB installed and
   don't want to downgrade, you can unpack the Berkeley 3.3.11
   distribution into a subdir named `db' in the top-level of the
   Subversion source tree.  Then Subversion will ignore the system DB
   and use the one it found in its own source tree.  Alternatively,
   you can add this flag

      --with-berkeley-db=/usr/local/BerkeleyDB.3.3

   to your `configure' switches, and the build process will use the
   named Berkeley.  You may need to use a different path, of course.

2. Python 2.1

   If you want to run "make check", install Python 2.1 or higher on
   your system, as the test suite is written in Python.  Get it from
   http://www.python.org/.

3. Clean up any previous Subversion installs first!

   Your build may appear to succeed, but actually link incorrectly, if
   there are old Subversion shared libraries on your system.  If
   you've installed Subversion shared libraries in the past, you must
   be sure to clean them out before building a newer version.  Usually
   this does the trick:

      # rm -f /usr/local/lib/libsvn*
      # rm -f /usr/local/lib/libapr*
      # rm -f /usr/local/lib/libexpat*
      # rm -f /usr/local/lib/libneon*

Please mail dev@subversion.tigris.org if you have any problems.

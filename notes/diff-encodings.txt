Better Encoding and Newline Dupport In The Diff Algorithms

[NOTE: This is work-in-progress.]

Introduction
============

Currently, the diff handling routines in libsvn_diff know nothing
about character encodings and eol characters.  It assumes an
ASCII-based encoding and LF as line separator.  This leads to a lot of
problems:

* Diff output will be inconsistently encoded.
* Files with different line endings cause unexpected results (i.e. CR
  line endings).
* Diff output gets inconsistent line endings.
* Non-ASCII based encodings, such as UTF16 aren't supported at all by
  subversion out-of-the-box.

Solving this situation seems to be a lot of work.  The motivation for
starting this is issue #1533 'diff output doesn't use correct
encoding'.  I want to discuss the whole picture to not prematurely
solve that issue, locking us into a situation where it gets hard to
solve the other parts for compatibility reasons.

Header Encoding
===============

Currently, most headers are written as UTF-8, which is normally not
what's wanted.  If the encoding of the files is known (via
svn:mime-type), the headers should probalby be written using that
encoding.

A short term solution here is to write all headers in the
locale/console encoding.  That makes sense since the user is probably
using the same encoding as the files s/he is working on has.  One
possibliity is to use the --encoding cmdline option to control the
encoding used for headers.

Note that this applies to property change information and property
values in the svn: namespace as well.

This requires an encoding parameter added to
svn_diff_output_uniffied and svn_client_diff_*.  The cmdline client
will pass the console encoding here; callers that write to a file will
pass NULL, meaning the locale encoding.  To allow this, we also need
an svn_cmdline_output_encoding function to ge the name of the output
encoding, or NULL if that's the same as the locale dito.

Newlines
========

According to the GNU diff documentation, on systems with newline
separators other than just LF, the newlines are normalized to the
system markers, except when --binary is used.

I think it is reasonable to do the following:
- When the modified file has svn:eol-style="native", accept all newline
  markers we know of and normalize to APR_EOL_STR.
- When the modified file haas svn:eol-style set to CR, LF or CRLF,
  accept all newline markers and normalize to CR, LF or CRLF,
  respectively.
- When the modified file has svn:eol-style not set, output the markers
  as they apeared in the old and modified files.  Still accept all kinds
  of newline markers.  For headers and svn: properties, use APR_EOL_STR.

This requires that the svn_client_diff* functions read the
svn:eol-style property of the modified file and passes that
information to svn_diff_file_output_uniffied.
svn_diff_file_output_uniffied needs an eolstr argument, giving the
newline marker to use, with NULL meaning output newines as-is.

Content Encoding
================

To support encodings that aren't ASCII-based (meaning that the first
128 bytes always means the same as in ASCII), Subversion needs to know
the encodings of the files being diffed.  We don't currently have a
canonical way of detecting the encoding.  It has been suggested to use
the charset parameter of svn:mime-type for this purpose.  Anyway, we
need to cope with the fact that not all files have this information
available.  In this case, we might assume the locale encoding and
allow --encoding to override the default.  [Do we need separate
--encoding values for the different files being diffed?]

When the encodings of the files are known, the diff tokenizer should
use that to decide what newline separator it expects.  A simple
solution is to just recode "\n", "\r\n" and "\r" into the file
encodings and search for that.  Beware that to support UTF16 and other
forms of Unicode, we need to support null characters in these strings.

NOTE: Supporting non-byte-oriented encodings such as UTF16 will
require work in other parts of the client libraries as well.  I'm
discussing it here to not design a solution where we can't support
that in the future.

To support this, svn_diff_file_diff will need arguments for the
encodings of the original and modified files.

Merge
=====

[TBD]
